<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>IntelliFactory.FastInvoke</name></assembly>
<members>
<member name="T:AutoAssemblyInfo">

</member>
<member name="">

</member>
<member name="M:IntelliFactory.FastInvoke.FastMethod.InvokeN(System.Object[])">
<summary>
 Invokes with an arbitrary number of arguments.
</summary>
</member>
<member name="">

</member>
<member name="M:IntelliFactory.FastInvoke.FastMethod.Invoke7(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
<summary>
 Invokes with 7 arguments.
</summary>
</member>
<member name="">

</member>
<member name="M:IntelliFactory.FastInvoke.FastMethod.Invoke6(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
<summary>
 Invokes with 6 arguments.
</summary>
</member>
<member name="">

</member>
<member name="M:IntelliFactory.FastInvoke.FastMethod.Invoke5(System.Object,System.Object,System.Object,System.Object,System.Object)">
<summary>
 Invokes with 5 arguments.
</summary>
</member>
<member name="">

</member>
<member name="M:IntelliFactory.FastInvoke.FastMethod.Invoke4(System.Object,System.Object,System.Object,System.Object)">
<summary>
 Invokes with 4 arguments.
</summary>
</member>
<member name="">

</member>
<member name="M:IntelliFactory.FastInvoke.FastMethod.Invoke3(System.Object,System.Object,System.Object)">
<summary>
 Invokes with 3 arguments.
</summary>
</member>
<member name="">

</member>
<member name="M:IntelliFactory.FastInvoke.FastMethod.Invoke2(System.Object,System.Object)">
<summary>
 Invokes with 2 arguments.
</summary>
</member>
<member name="">

</member>
<member name="M:IntelliFactory.FastInvoke.FastMethod.Invoke1(System.Object)">
<summary>
 Invokes with 1 argument.
</summary>
</member>
<member name="">

</member>
<member name="M:IntelliFactory.FastInvoke.FastMethod.Invoke0">
<summary>
 Invokes with 0 arguments.
</summary>
</member>
<member name="">

</member>
<member name="T:IntelliFactory.FastInvoke.FastMethod">
<summary>
 Represents a method that can be quickly invoked dynamically.
</summary>
</member>
<member name="M:IntelliFactory.FastInvoke.Compile(System.Reflection.MethodInfo)">
<summary>
 Compiles a method to a fast invoke function.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:IntelliFactory.FastInvoke.CodeGen">
<summary>
 Generates dynamic methods for methods with a large number of arguments (N &gt;= 8).
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:IntelliFactory.FastInvoke.Implementation">

</member>
<member name="T:IntelliFactory.FastInvoke">
<summary>
 Splits invocation of methods represented as `System.Reflection.MethodInfo`
 into the static and dynamic phase, doing the binding work at the static phase.
 A pre-bound method can be 100-1000x faster to invoke compared to using `.Invoke`
 every time, which has to repeatedly do method binding.
</summary>
</member>
</members>
</doc>
